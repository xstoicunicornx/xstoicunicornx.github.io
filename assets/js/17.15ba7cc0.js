(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{352:function(e,t,n){"use strict";n.r(t);var o=n(6),a=Object(o.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("I am jazzed to release our first blog post. I cover the history of PDK, why you should consider using it to add Payjoin to your stack, and some of our priorities moving forward. Weâ€™ll be updating this blog with development updates, new features and the details of new releases.")]),e._v(" "),t("h2",{attrs:{id:"what-is-pdk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#what-is-pdk"}},[e._v("#")]),e._v(" What is PDK?")]),e._v(" "),t("p",[e._v("PDK began as a side project developed by Martin HabovÅ¡tiak "),t("a",{attrs:{href:"https://github.com/kixunil",target:"_blank",rel:"noopener noreferrer"}},[e._v("@Kixunil"),t("OutboundLink")],1),e._v(" in "),t("a",{attrs:{href:"https://github.com/payjoin/rust-payjoin/commit/d70c447af622e2b9db34b833fe22a80ff3b2d223",target:"_blank",rel:"noopener noreferrer"}},[e._v("2021"),t("OutboundLink")],1),e._v(". One of Martin's early rust payjoin applications, "),t("a",{attrs:{href:"https://github.com/Kixunil/loptos",target:"_blank",rel:"noopener noreferrer"}},[e._v("loptos"),t("OutboundLink")],1),e._v(", receives Payjoin  to open batches of lightning channels from an external Payjoin sender, reducing fees and eliminating a transaction from typical channel funding flow. Payjoin had been cast as a merchant / client privacy tool, but Martin saw payjoin as an interactive transaction coordinator early on. I now view Payjoin as the simplest way to deploy Greg Maxwell's 2013 transaction cut-through idea to scale bitcoin.")]),e._v(" "),t("p",[e._v("A couple months later, Alex Gladstein announced Human Rights Foundation "),t("a",{attrs:{href:"https://twitter.com/gladstein/status/1437796214376845315",target:"_blank",rel:"noopener noreferrer"}},[e._v("support"),t("OutboundLink")],1),e._v(" of my work to make Payjoin mobile friendly in iOS. In my Payjoin deep dive, I realized that while mobile payjoin was possible, the dependencies it needed (like Tor ðŸ‘€) would not suit many Bitcoin apps. On the path to a new version capable of universal support, I found Martin's rust payjoin to be a worthy foundation on which to build. The success of "),t("a",{attrs:{href:"https://bitcoindevkit.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("BDK"),t("OutboundLink")],1),e._v(" and "),t("a",{attrs:{href:"https://lightningdevkit.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("LDK"),t("OutboundLink")],1),e._v(" inspired me. A Rust Payjoin dev kit could be flexible and safe enough to run everywhere.")]),e._v(" "),t("p",[e._v("In the fall of 2022, Evan Lin, Nick Farrow, Armin Sabouri and I upgraded loptos with a web interface, documentation, and demos into into "),t("a",{attrs:{href:"https://github.com/chaincase-app/nolooking",target:"_blank",rel:"noopener noreferrer"}},[e._v("nolooking"),t("OutboundLink")],1),e._v(". While it only batched channels at first, nolooking now leverages PDK to make canonical payjoin transactions. The Payjoin transaction structure can preserve Bitcoin network privacy for all, too.")]),e._v(" "),t("p",[e._v("The demand from the launch of nolooking inspired me to reach out to more wallet projects which may have interest in using Payjoin. In particular, Michael from Boltz Exchange and Hugo Nguyen from Nunchuk both expressed early interest, but their projects use languages that are not rust. Matthias from Trident Wallet and Thunderbiscuit on the BDK team have volunteered their time exporing binding options. WizardSardine's Liana can make use of it too.")]),e._v(" "),t("p",[e._v("Conor Okus saw potential for payjoin and suggested a website to explain how it works and how to progress. That idea became "),t("a",{attrs:{href:"https://payjoin.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("payjoin.org"),t("OutboundLink")],1),e._v(" and newfound interest in its potential integrations. He pointed me to engage with the Bitcoin Design Community, where Stephen DeLorme and Christoph Ono helped me to issue a design challenge which "),t("a",{attrs:{href:"https://twitter.com/Yashraj__",target:"_blank",rel:"noopener noreferrer"}},[e._v("Yashraj"),t("OutboundLink")],1),e._v(" accepted, went on to develop "),t("a",{attrs:{href:"https://bitcoin.design/guide/case-studies/payjoin/",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Payjoin Experience Case Study"),t("OutboundLink")],1),e._v(" in collaboration with Mogashni Naidoo, and present his findings at the Canadian Bitcoin Conference.")]),e._v(" "),t("p",[e._v("Hunter Beast took a risk on an early alpha of PDK, adding it to the Bitcoin, Lightning, and RGB web wallet BitMask. Steve Meyers of BDK mentors Will Owens as a Summer of Bitcoin intern to support payjoin in the BDK-CLI tool. Francis Pouliot engages closely with PDK to fulfil his "),t("a",{attrs:{href:"https://twitter.com/francispouliot_/status/1138131827258986499",target:"_blank",rel:"noopener noreferrer"}},[e._v("vow"),t("OutboundLink")],1),e._v(' that Bull Bitcoin will be "the first Bitcoin company in the world to integrate pay-to-endpoint Bitcoin deposits and withdrawals." Now that the sturdy base of PDK exists, Payjoin stands a chance to evolve into every Bitcoin product.')]),e._v(" "),t("p",[e._v("A phalanx of even more unnamed supporters continue to raise this open-source groundwork with funding, infrastructure, integrations, bindings, design, protcol development, advice, documentation and more. Thank you all for your continued support. Follow along on "),t("a",{attrs:{href:""}},[e._v("Twitter")]),e._v(", join the conversation on "),t("a",{attrs:{href:""}},[e._v("Discord")]),e._v(", and get involved. If you are a developer, read on to understand why PDK exists and how you can make use of it today.")]),e._v(" "),t("h2",{attrs:{id:"what-advantages-does-pdk-offer-developers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#what-advantages-does-pdk-offer-developers"}},[e._v("#")]),e._v(" What advantages does PDK offer developers?")]),e._v(" "),t("h2",{attrs:{id:"who-uses-pdk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#who-uses-pdk"}},[e._v("#")]),e._v(" Who uses PDK?")]),e._v(" "),t("p",[e._v("PDK supports hot wallet applications, mobile and web environments, "),t("a",{attrs:{href:"https://chaincase.app/words/lightning-payjoin",target:"_blank",rel:"noopener noreferrer"}},[e._v("Lightning Payjoin"),t("OutboundLink")],1),e._v(" channel opening, interesting miniscript optimizations, enterprise batching, and more. The following are a few examples you can try in the wild.")]),e._v(" "),t("h2",{attrs:{id:"bitcoin-core-payjoin-cli-extension"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bitcoin-core-payjoin-cli-extension"}},[e._v("#")]),e._v(" "),t("a",{attrs:{href:"https://github.com/payjoin/rust-payjoin/tree/master/payjoin-cli",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bitcoin Core payjoin-cli extension"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("The sample serves as a complete reference for sending and receiving Payjoin with\nthe PDK. This is a good starting point if you want a self-guided tour. "),t("code",[e._v("payjoin-cli")]),e._v(" uses the blocking version of the "),t("code",[e._v("reqwest")]),e._v(" crate for networking, so it's as simple as it gets.")]),e._v(" "),t("h2",{attrs:{id:"lnd-nolooking-payjoin-extension"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lnd-nolooking-payjoin-extension"}},[e._v("#")]),e._v(" "),t("a",{attrs:{href:"https://github.com/chaincase-app/nolooking",target:"_blank",rel:"noopener noreferrer"}},[e._v("LND nolooking payjoin extension"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("Send and receive payjoin from LND. Batch lightning channel open transactions in payjoins with a web UI. Nolooking makes use of "),t("code",[e._v("async")]),e._v(" and "),t("code",[e._v("tokio")]),e._v(". If your project uses an asynchronous runtime, this is the reference for you.")]),e._v(" "),t("h2",{attrs:{id:"bitmask-beta"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bitmask-beta"}},[e._v("#")]),e._v(" "),t("a",{attrs:{href:"https://beta.bitmask.app",target:"_blank",rel:"noopener noreferrer"}},[e._v("BitMask Beta"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("Payjoin in a bitcoin webapp. Written in Rust and compiled to WASM. BitMask supports bitcoin, lightning, and RGB protocol assets. It uses the asynchronus "),t("code",[e._v("reqwest")]),e._v(" client.")]),e._v(" "),t("p",[e._v("Weâ€™re also talking to dozens of open source projects, developers, and businesses, some of whom we expect to adopt PDK soon.")]),e._v(" "),t("h2",{attrs:{id:"what-are-pdk-s-engineering-priorities"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#what-are-pdk-s-engineering-priorities"}},[e._v("#")]),e._v(" What are PDKâ€™s engineering priorities?")]),e._v(" "),t("h3",{attrs:{id:"a-robust-interface"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-robust-interface"}},[e._v("#")]),e._v(" A Robust Interface")]),e._v(" "),t("p",[e._v("Before PDK, a Payjoin implementations existed that were tightly coupled to their wallet logic. We want to build a sane inteface with comprehensive error handling. Being a privacy tool, getting the interface right and removing places where users can make errors is a critical goal. At the time of writing, the Payjoin "),t("code",[e._v("send")]),e._v(" feature is beta quality while the "),t("code",[e._v("receiver")]),e._v(" is in late alpha.")]),e._v(" "),t("h3",{attrs:{id:"serverless-asynchronous-payjoin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#serverless-asynchronous-payjoin"}},[e._v("#")]),e._v(" Serverless, Asynchronous Payjoin")]),e._v(" "),t("p",[e._v("Payjoin v1 wallets can't receive unless the app is open, online, and hosting a public HTTP endpoint. Weâ€™re developing solutions in conjunction with the Bitcoin developer community at large that will let offline wallets receive Payjoin without hosting a public server. I have a "),t("a",{attrs:{href:"https://github.com/payjoin/rust-payjoin/pull/21",target:"_blank",rel:"noopener noreferrer"}},[e._v("pull request"),t("OutboundLink")],1),e._v(" open that proposes a protocol to fix this exact problem. It includes his original post to the bitcoin-dev mailing list which is a "),t("a",{attrs:{href:"https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021364.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("detailed technical"),t("OutboundLink")],1),e._v(" read on this issue.")]),e._v(" "),t("h3",{attrs:{id:"language-bindings"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#language-bindings"}},[e._v("#")]),e._v(" Language Bindings")]),e._v(" "),t("p",[e._v("Weâ€™re making existing language integrations feel more native. We currently support Rust, but bindings are an active area of development. Bindings are in the proof of concept stage and "),t("a",{attrs:{href:"https://deploy-preview-144--awesome-golick-685c88.netlify.app/blog/bindings-scope/",target:"_blank",rel:"noopener noreferrer"}},[e._v("the approach"),t("OutboundLink")],1),e._v(" is being defined in collaboration with BDK and LDK. We prioritize fixing bugs for early adopters. Express your support for C/C++, C#, Flutter/Dart, Kotlin/JVM, Python, Swift, WASM to get the ball rolling.")]),e._v(" "),t("h3",{attrs:{id:"design-guidance"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#design-guidance"}},[e._v("#")]),e._v(" Design Guidance")]),e._v(" "),t("p",[e._v("The payjoin protocol was designed to fit in the universal bitcoin URI and QR standard. Most of the user decisions regarding transaction construction, coin selection, and fees can be automated. We want to make it as easy as possible for developers to go from the decision that they'll support payjoin to a production deployment, and that includes front end components and communication with users")]),e._v(" "),t("h2",{attrs:{id:"wrapping-up"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#wrapping-up"}},[e._v("#")]),e._v(" Wrapping up")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/orgs/lightningdevkit/discussions/1554",target:"_blank",rel:"noopener noreferrer"}},[e._v("Know someone supporting Payjoin or related application?"),t("OutboundLink")],1),e._v(" Point them in "),t("a",{attrs:{href:"https://twitter.com/bitgould",target:"_blank",rel:"noopener noreferrer"}},[e._v("@bitgouldâ€™s"),t("OutboundLink")],1),e._v(" direction. If youâ€™re already using PDK and have questions, hop into our "),t("a",{attrs:{href:"https://discord.gg/xaYE3pDQpm",target:"_blank",rel:"noopener noreferrer"}},[e._v("Discord"),t("OutboundLink")],1),e._v(" or checkout GitHub "),t("a",{attrs:{href:"https://github.com/orgs/payjoin/discussions",target:"_blank",rel:"noopener noreferrer"}},[e._v("Discussions"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=a.exports}}]);