(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{354:function(t,e,a){"use strict";a.r(e);var n=a(6),i=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("div",{staticClass:"intro"},[e("h2",[t._v("Why PDK?")]),t._v(" "),e("p",[t._v("Integrate payjoin into any Bitcoin wallet")])]),t._v(" "),e("div",{staticClass:"features"},[e("div",{staticClass:"feature"},[e("h3",[t._v("PSBT Purity")]),t._v(" "),e("p",[t._v("Standard PSBT support and an internet connection is all you need to payjoin. No fancy transaction parsing or wallet architechture required.")])]),t._v(" "),e("div",{staticClass:"feature"},[e("h3",[t._v("Sans IO")]),t._v(" "),e("p",[t._v("The library is perfectly IO-agnosticâ€”in fact, it does no IO. The primary goal of such design is to be easy to unit test. As a bonus, it can run almost anywhere.")])]),t._v(" "),e("div",{staticClass:"feature"},[e("h3",[t._v("Use any Runtime")]),t._v(" "),e("p",[t._v("We don't choose whether you use "),e("code",[t._v("async")]),t._v(", blocking, "),e("code",[t._v("tokio")]),t._v(", "),e("code",[t._v("sync-std")]),t._v(", "),e("code",[t._v("hyper")]),t._v(", "),e("code",[t._v("actix")]),t._v(" or whatever. Use what you're already comfortable with. See "),e("RouterLink",{attrs:{to:"/examples/"}},[t._v("examples")]),t._v(" for a number of reference implementations.")],1)]),t._v(" "),e("div",{staticClass:"feature"},[e("h3",[t._v("Multi-Language Support")]),t._v(" "),e("p",[t._v("We are building native APIs for Rust, C, Python, Swift, JavaScript, Java & Kotlin so you can build Payjoin applications in your preferred programming language.")])])])])}),[],!1,null,null,null);e.default=i.exports}}]);