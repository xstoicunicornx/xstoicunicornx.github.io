(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{389:function(e,t,r){"use strict";r.r(t);var n=r(25),a=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Due to a docker misconfiguration, the "),t("code",[e._v("payjo.in")]),e._v(" directory server had an open\nredis database, allowing unauthorized parties to observe exchanges between pairs\nof senders which only support BIP 78 and receivers which support BIP 77.")]),e._v(" "),t("p",[e._v("Some payjoins which used the backwards compatibility of BIP 77 receivers with\nBIP 78 senders during this period may thus not have the common input ownership\nheuristic protection they otherwise would, but the unauthorized access does\nnot change the nature of the risk regarding the user custody of funds.")]),e._v(" "),t("h2",{attrs:{id:"background"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#background"}},[e._v("#")]),e._v(" Background")]),e._v(" "),t("p",[e._v("The payjoin directory is a store and forward server that allows BIP 77\nreceivers to accept both BIP 77 and BIP 78 payjoin requests from senders\nasynchronously. Clients use GET requests to poll for messages, and POST\nrequests to send them. Messages are stored in a Redis database.")]),e._v(" "),t("p",[e._v("When both parties use BIP 77, messages exchanged through the directory are end\nto end encrypted and all requests are made over Oblivious HTTP (OHTTP), so both\ndata and metadata are protected from the directory.")]),e._v(" "),t("p",[e._v("BIP 78 does not utilize such encryption, instead relying on the transport layer\nfor data privacy. Nor does it require the use of OHTTP (but some implementations\nutilize Tor for metadata privacy). Therefore when a BIP 78 sender initiates a\npayjoin to a BIP 77 receiver the directory server is able to observe the\nsender's Original PSBT as well as the receiver's Proposall PSBT response.")]),e._v(" "),t("h2",{attrs:{id:"misconfiguration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#misconfiguration"}},[e._v("#")]),e._v(" Misconfiguration")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("payjo.in")]),e._v(" directory was configured using docker compose on an Ubuntu linux\nhost.")]),e._v(" "),t("p",[e._v("The docker compose setup "),t("a",{attrs:{href:"https://github.com/payjoin/rust-payjoin/pull/413/files#diff-3f63197097d5d0eb6ccdd4dc7417f3ba7ffed24f3e0edba87bd4fa459cc83a84R43-R44",target:"_blank",rel:"noopener noreferrer"}},[e._v("unnecessarily published the redis port on all\ninterfaces"),t("OutboundLink")],1),e._v(".\nAlthough the ufw firewall was configured to only allow ports that were meant to\nbe public, ufw is a frontend to iptables and "),t("a",{attrs:{href:"https://docs.docker.com/engine/network/packet-filtering-firewalls/#docker-and-ufw",target:"_blank",rel:"noopener noreferrer"}},[e._v("docker's use of iptables bypasses\nufw's\npolicies"),t("OutboundLink")],1),e._v(",\nwhich left port 6379 "),t("a",{attrs:{href:"https://www.shodan.io/host/172.81.183.21",target:"_blank",rel:"noopener noreferrer"}},[e._v("publicly\naccessible"),t("OutboundLink")],1),e._v(" without access control.")]),e._v(" "),t("h2",{attrs:{id:"attack-discovery"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#attack-discovery"}},[e._v("#")]),e._v(" Attack & Discovery")]),e._v(" "),t("p",[e._v("Unknown parties accessed the redis server through the publicly accessible port.\nThey configured the redis instance "),t("a",{attrs:{href:"https://redis.io/docs/latest/commands/replicaof/",target:"_blank",rel:"noopener noreferrer"}},[e._v("as a readonly\nreplica"),t("OutboundLink")],1),e._v(" of an attacker\ncontrolled master, which resulted in error responses from the directory.")]),e._v(" "),t("p",[e._v("Error responses were first reported on March 24th. Due to a bug\n(since "),t("a",{attrs:{href:"https://github.com/payjoin/rust-payjoin/pull/630",target:"_blank",rel:"noopener noreferrer"}},[e._v("fixed"),t("OutboundLink")],1),e._v("), the errors\nwere misreported as related to bad client request. Restarting the service\nseemed to resolve the issue, but upon closer investigation, they\nwere discovered to be operational errors, indicating the redis database was read\nonly. This was a result of misconfiguration that led to unauthorized access,\nwith the attacker issuing a "),t("code",[e._v("REPLICAOF")]),e._v(" command making the directory's redis\ndatabase a readonly replica of an unrelated attacker controlled database.")]),e._v(" "),t("p",[e._v("Unfortunately logs from the full duration of the exposure were not retained,\nsince restarting the service through docker compose did not retain that\ninformation. Only the period between April 1st and April 2nd were retained,\nwhere the configured master was unavailable.")]),e._v(" "),t("h3",{attrs:{id:"timeline"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#timeline"}},[e._v("#")]),e._v(" Timeline")]),e._v(" "),t("ul",[t("li",[e._v("2025/03/24 18:24 UTC: Error responses first reported, server restarted")]),e._v(" "),t("li",[e._v("2025/04/02 17:01 UTC: Bad client request investigated and compromise discovered")]),e._v(" "),t("li",[e._v("2025/04/02 18:24 UTC: New server provisioned and started with secured redis port")])]),e._v(" "),t("h2",{attrs:{id:"impact"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#impact"}},[e._v("#")]),e._v(" Impact")]),e._v(" "),t("p",[e._v("Use of the "),t("code",[e._v("KEYS")]),e._v(", "),t("code",[e._v("GET")]),e._v(" and "),t("code",[e._v("PSYNC")]),e._v(" Redis commands was not restricted,\npotentially allowing any party to obtain a copy of any messages observed by the\ndirectory. Whether or not a copy of the messages observed by the directory were\ncollected is unknown.")]),e._v(" "),t("p",[e._v("The messages exchanged between BIP 78 sends to BIP 77 receivers are not\nencrypted, so their contents may have been leaked to unknown 3rd parties\nthrough such access.")]),e._v(" "),t("p",[e._v("Knowledge of the Original PSBT allows interpretation of the final\npayjoin transaction (if one is produced), because the sender and receiver's\ninputs and outputs can be identified utilizing the information that is supposed\nto stay off chain.")]),e._v(" "),t("p",[e._v("BIP 77 senders and receivers are unaffected due to HPKE based end to end\nencryption. BIP 77 receivers which opted out of BIP 78 protocol initiations by\nbroadcasting the transaction extracted from the Original PSBT transaction were\nalso unaffected since the information exchanged ends up being publicly broadcast\nin this scenario.")]),e._v(" "),t("h2",{attrs:{id:"mitigation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mitigation"}},[e._v("#")]),e._v(" Mitigation")]),e._v(" "),t("p",[e._v("The docker compose configuration was\n"),t("a",{attrs:{href:"https://github.com/payjoin/rust-payjoin/pull/634",target:"_blank",rel:"noopener noreferrer"}},[e._v("updated"),t("OutboundLink")],1),e._v("\nto no longer publish ports of internal services.")]),e._v(" "),t("p",[e._v("Preliminary vulnerability scanning is also now in place.")]),e._v(" "),t("p",[e._v("As an additional precaution, a new server was provisioned for the payjo.in\nhost.")]),e._v(" "),t("p",[e._v("On the operational side, hardening, and re-evaluation of logging, monitoring\nand vulnerability scanning, as well as on the software side, simplification of\nthe service architecture to reduce the attack surface are also planned.")])])}),[],!1,null,null,null);t.default=a.exports}}]);