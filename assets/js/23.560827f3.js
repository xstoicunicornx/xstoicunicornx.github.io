(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{358:function(t,e,a){"use strict";a.r(e);var o=a(6),s=Object(o.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"send-and-receive-test-payjoins"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#send-and-receive-test-payjoins"}},[t._v("#")]),t._v(" Send and Receive Test Payjoins")]),t._v(" "),e("p",[t._v("Let's make our first payjoins. We'll ensure we have a compatible Rust toolchain installed, setup Bitcoin Core to create a local bitcoin wallets and then start send a payjoin from one to the other.")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("Not recommended for production use!")]),t._v(" "),e("p",[t._v("This guide is a quick start to get you up and running with PDK payjoins. This configuration serves as a playground and a foundation to build upon and is NOT recommended for production environments.")])]),t._v(" "),e("h2",{attrs:{id:"install-rust"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-rust"}},[t._v("#")]),t._v(" Install Rust")]),t._v(" "),e("p",[t._v("If you already have a working installation of the latest Rust compiler, feel free to skip to the next section.")]),t._v(" "),e("p",[t._v("To install the latest version of Rust, we recommend using "),e("code",[t._v("rustup")]),t._v(". Install "),e("code",[t._v("rustup")]),t._v(" by following the instructions on "),e("a",{attrs:{href:"https://rustup.rs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("its website"),e("OutboundLink")],1),t._v(". Once "),e("code",[t._v("rustup")]),t._v(" is installed, ensure the latest toolchain is installed by running the command:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("rustup default stable\n")])])]),e("h2",{attrs:{id:"set-up-bitcoin-core"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set-up-bitcoin-core"}},[t._v("#")]),t._v(" Set up Bitcoin Core")]),t._v(" "),e("p",[t._v("Next, let's setup Bitcoin regtest, a local bitcoin network developers spin up on their local computers.")]),t._v(" "),e("p",[t._v("Bitcoin Core can be "),e("a",{attrs:{href:"https://bitcoincore.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("downloaded"),e("OutboundLink")],1),t._v(" for MacOS, Linux, and Windows. The source code is hosted "),e("a",{attrs:{href:"https://github.com/bitcoin/bitcoin/releases/",target:"_blank",rel:"noopener noreferrer"}},[t._v("on Github"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("p",[t._v("After downloading and installing, create two wallets "),e("code",[t._v("send")]),t._v(" and "),e("code",[t._v("receive")]),t._v(". Fund them both with regtest coins.")]),t._v(" "),e("h2",{attrs:{id:"run-the-pdk-sample-payjoin-cli"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#run-the-pdk-sample-payjoin-cli"}},[t._v("#")]),t._v(" Run the PDK sample payjoin-cli")]),t._v(" "),e("p",[t._v("Start by cloning the payjoin-cli from GitHub and changing into the new directory")]),t._v(" "),e("div",{staticClass:"language-console extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git clone https://github.com/payjoin/rust-payjoin.git\ncd payjoin-cli\nmkdir receive\nmkdir send\n")])])]),e("h2",{attrs:{id:"run-the-payjoin-reciever"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#run-the-payjoin-reciever"}},[t._v("#")]),t._v(" Run the Payjoin reciever")]),t._v(" "),e("p",[t._v("Receiving a payjoin involves hosting an HTTP that the sender can reach. First, configure the receiver to connect to bitcoind.")]),t._v(" "),e("div",{staticClass:"language-console extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("cd receive\ntouch cargo.toml\n")])])]),e("p",[t._v("Edit the configuration file according to "),e("a",{attrs:{href:"https://en.bitcoin.it/wiki/Data_directory",target:"_blank",rel:"noopener noreferrer"}},[t._v("your operating system's bitcoin data directory"),e("OutboundLink")],1),t._v(":")]),t._v(" "),e("p",[t._v("This sample is valid for a default datadir on MacOS:")]),t._v(" "),e("div",{staticClass:"language-toml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-toml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# receive/cargo.toml")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("bitcoind_cookie")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~/Library/Application Support/Bitcoin/regtest/.cookie"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("bitcoind_rpchost")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:18443/wallets/receive"')]),t._v("\n")])])]),e("p",[t._v("Now, run the following command:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("cargo run -- receive 10000\n")])])]),e("p",[t._v("This will generate a universal bitcoin URI with payjoin enabled similar to the following:")]),t._v(" "),e("div",{staticClass:"language-console extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("BITCOIN:BCRT1QCJ4X75DUNY4X5NAWLM3CR8MALM9YAUYWWEWKWL?amount=0.00010&pj=https://localhost:3010\n")])])]),e("h3",{attrs:{id:"proxy-https"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#proxy-https"}},[t._v("#")]),t._v(" Proxy HTTPS")]),t._v(" "),e("p",[t._v("The default "),e("code",[t._v("payjoin-cli")]),t._v(" configuration listens for requests at "),e("code",[t._v("http://localhost:3000")]),t._v(", so requests to "),e("code",[t._v("https://localhost:3010")]),t._v(" must be proxied there.")]),t._v(" "),e("p",[t._v("Payjoin "),e("code",[t._v("&pj=")]),t._v(" must be either "),e("code",[t._v("https")]),t._v(" or "),e("code",[t._v(".onion")]),t._v(" secure endpoints. Therefore, one must host a proxy from the "),e("code",[t._v("https")]),t._v(" endpoint to the local unsecured "),e("code",[t._v("http")]),t._v(" server. One option to proxy is with "),e("a",{attrs:{href:"https://github.com/cameronhunter/local-ssl-proxy",target:"_blank",rel:"noopener noreferrer"}},[t._v("local-ssl-proxy"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("p",[t._v("Once installed, "),e("strong",[t._v("in a new terminal window")]),t._v(", one may run the following command to run such a proxy:")]),t._v(" "),e("div",{staticClass:"language-console extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("local-ssl-proxy --source 3010 --target 3000\n")])])]),e("p",[t._v("At this point "),e("code",[t._v("payjoin-cli")]),t._v(" is ready to receive payjoin to Bitcoin Core's "),e("code",[t._v("receive")]),t._v(" regtest wallet.")]),t._v(" "),e("h2",{attrs:{id:"send-payjoin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#send-payjoin"}},[t._v("#")]),t._v(" Send Payjoin")]),t._v(" "),e("p",[e("strong",[t._v("Return to the "),e("code",[t._v("payjoin-cli")]),t._v(" directory")]),t._v(". From there, navigate to the previously initialized "),e("code",[t._v("send")]),t._v(" directory.")]),t._v(" "),e("div",{staticClass:"language-console extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("cd send\ntouch config.toml\n")])])]),e("p",[t._v("Edit the configuration file according to "),e("a",{attrs:{href:"https://en.bitcoin.it/wiki/Data_directory",target:"_blank",rel:"noopener noreferrer"}},[t._v("your operating system's bitcoin data directory"),e("OutboundLink")],1),t._v(":")]),t._v(" "),e("div",{staticClass:"language-toml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-toml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# send/cargo.toml")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("bitcoind_cookie")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~/Library/Application Support/Bitcoin/regtest/.cookie"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("bitcoind_rpchost")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:18443/wallets/send"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key property"}},[t._v("danger_accept_invalid_certs")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])]),e("p",[t._v("After configuration, assuming funded "),e("code",[t._v("send")]),t._v(" and "),e("code",[t._v("receive")]),t._v(" wallets in Bitcoin Core, running the following command "),e("strong",[t._v("with your previous receiver genrated bitcoin URI")]),t._v(" will send a payjoin from "),e("code",[t._v("send")]),t._v(" to "),e("code",[t._v("receive")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-console extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("cargo run -- send $RECEIVE_URI\n")])])]),e("p",[t._v("Make sure you replace "),e("code",[t._v("$RECEIVE_URI")]),t._v(" with the bitcoin URI pasted from the receiver console.")]),t._v(" "),e("p",[t._v("You should see the payjoin transaction ID in the console. Congrats, you just Payjoined ðŸŽ‰.")])])}),[],!1,null,null,null);e.default=s.exports}}]);